Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Machine Node with following Taint: 0
t17: i64 = <<Unknown Machine Node #65365>> TargetGlobalAddress:i64<[64 x i8]* @.str> 0
Emit Machine Node with following Taint: 0
t19: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t7: ch,glue = CopyToReg t0, Register:i64 $physreg52, t17
Emit Special Node with following Taint: 0
t9: ch,glue = CopyToReg t7, Register:i64 $physreg56, t2, t7:1
Emit Special Node with following Taint: 0
t11: ch,glue = CopyToReg t9, Register:i8 $physreg2, t5, t9:1
Emit Machine Node with following Taint: 0
t15: ch = <<Unknown Machine Node #62536>> TargetGlobalAddress:i64<i32 (i8*, ...)* @printf> 0, TargetConstant:i32<0>, Register:i64 $physreg52, Register:i64 $physreg56, Register:i8 $physreg2, RegisterMask:Untyped, t11, t11:1
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB0_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB0_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_modeled

Emit Instruction Taint 0
Emit Instruction $rsi = MOV64rr $rdi, pre-instr-symbol <mcsymbol .LBB0_0_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction $edi = MOV32ri @.str, implicit-def $rdi

Emit Instruction Taint 0
Emit Instruction dead $eax = XOR32rr undef $eax(tied-def 0), undef $eax, implicit-def dead $eflags, implicit-def $al

Emit Instruction Taint 0
Emit Instruction TAILJMPd64 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rsp, implicit $ssp, implicit $rdi, implicit $rsi, implicit killed $al, post-instr-symbol <mcsymbol .LBB0_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Machine Node with following Taint: 0
t6: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t27: i32 = <<Unknown Machine Node #62520>> t6, t6
Emit Special Node with following Taint: 0
t34: ch,glue = CopyToReg t0, Register:i32 $physreg28, t27
Emit Machine Node with following Taint: 0
t30: ch = <<Unknown Machine Node #64315>> BasicBlock:ch<for.cond.cleanup 0x55deef8c1fc8>, t34, t34:1
Emit Machine Node with following Taint: 0
t15: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body.preheader 0x55deef8c1f00>, t30
Emit Machine Node with following Taint: 0
t7: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t3: ch = CopyToReg t0, Register:i64 %6, t1
Emit Machine Node with following Taint: 0
t5: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8c2090>, t3
Emit Machine Node with following Taint: 0
t5: i8 = <<Unknown Machine Node #63735>> TargetConstant:i8<1>
Emit Special Node with following Taint: 0
t7: ch = CopyToReg t0, Register:i8 %8, t5
Emit Machine Node with following Taint: 0
t4: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @testType, !tbaa <0x55deef8081d8>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @testType> 0, Register:i32 $noreg, t0
Emit Special Node with following Taint: 0
t9: ch = CopyToReg t0, Register:i32 %9, t4
Emit Machine Node with following Taint: 0
t21: i32 = <<Unknown Machine Node #62520>> t4, t4
Emit Special Node with following Taint: 0
t14: ch = TokenFactor t7, t9
Emit Special Node with following Taint: 0
t28: ch,glue = CopyToReg t14, Register:i32 $physreg28, t21
Emit Machine Node with following Taint: 0
t24: ch = <<Unknown Machine Node #64324>> BasicBlock:ch<for.inc.sink.split 0x55deef8c2290>, t28, t28:1
Emit Machine Node with following Taint: 0
t17: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8cd498>, t24
Emit Special Node with following Taint: 0
t2: i32,ch = CopyFromReg t0, Register:i32 %9
Emit Machine Node with following Taint: 0
t19: i32,i32 = <<Unknown Machine Node #62634>> t2, TargetConstant:i32<1>
Emit Special Node with following Taint: 0
t24: ch,glue = CopyToReg t0, Register:i32 $physreg28, t19:1
Emit Machine Node with following Taint: 0
t22: ch = <<Unknown Machine Node #64294>> BasicBlock:ch<for.inc 0x55deef8c23c8>, t24, t24:1
Emit Machine Node with following Taint: 0
t11: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<if.then3 0x55deef8c21c8>, t22
Emit Machine Node with following Taint: 0
t4: i8,ch = <<Unknown Machine Node #63733>><Mem:(dereferenceable load 1 from @garbageCtr, !tbaa <0x55deef8081d8>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i8* @garbageCtr> 0, Register:i32 $noreg, t0
Emit Special Node with following Taint: 0
t21: ch,glue = CopyToReg t0, Register:i8 $physreg2, t4
Emit Machine Node with following Taint: 0
t5: i8,i32 = <<Unknown Machine Node #63595>> t4, t21:1
Emit Machine Node with following Taint: 0
t7: i8,i32 = <<Unknown Machine Node #65245>> t5, TargetConstant:i8<7>
Emit Special Node with following Taint: 0
t9: ch = CopyToReg t0, Register:i8 %1, t7
Emit Machine Node with following Taint: 0
t10: ch = <<Unknown Machine Node #63740>><Mem:(store 1 into @garbageCtr, !tbaa <0x55deef8081d8>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i8* @garbageCtr> 0, Register:i32 $noreg, t7, t4:1
Emit Special Node with following Taint: 0
t11: ch = TokenFactor t9, t10
Emit Special Node with following Taint: 0
t4: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %4
Emit Special Node with following Taint: 0
t7: i8,ch = CopyFromReg t0, Register:i8 %2
Emit Machine Node with following Taint: 0
t10: ch = <<Unknown Machine Node #63740>><Mem:(store 1 into %ir.scevgep, !tbaa <0x55deef8081d8>)> t2, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, t7, t0
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Machine Node with following Taint: 0
t4: i64,i32 = <<Unknown Machine Node #65255>> nuw nsw t2, TargetConstant:i64<1>
Emit Special Node with following Taint: 0
t6: ch = CopyToReg t0, Register:i64 %3, t4
Emit Machine Node with following Taint: 0
t18: i64,ch = <<Unknown Machine Node #63632>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t23: i64,i32 = <<Unknown Machine Node #62623>> t4, t18
Emit Special Node with following Taint: 0
t30: ch,glue = CopyToReg t6, Register:i32 $physreg28, t23:1
Emit Machine Node with following Taint: 0
t26: ch = <<Unknown Machine Node #64312>> BasicBlock:ch<for.body 0x55deef8c2090>, t30, t30:1
Emit Machine Node with following Taint: 0
t17: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.cond.cleanup 0x55deef8c1fc8>, t26
Emit Machine Node with following Taint: 0
t2: ch = <<Unknown Machine Node #63003>> TargetConstant:i32<0>, t0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @numEntries, $noreg, pre-instr-symbol <mcsymbol .LBB1_0_CartridgeBody> :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST32rr killed renamable $eax, renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JLE_1 %bb.8, implicit $eflags, post-instr-symbol <mcsymbol .LBB1_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_1_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_1_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $ecx = XOR32rr undef $ecx(tied-def 0), undef $ecx, implicit-def dead $eflags, implicit-def $rcx, pre-instr-symbol <mcsymbol .LBB1_1_CartridgeBody>, post-instr-symbol <mcsymbol .LBB1_1_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_2_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_2_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @testType, $noreg, pre-instr-symbol <mcsymbol .LBB1_2_CartridgeBody> :: (dereferenceable load 4 from @testType, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction TEST32rr renamable $eax, renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JE_1 %bb.5, implicit $eflags, post-instr-symbol <mcsymbol .LBB1_2_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_3_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_3_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction CMP32ri8 killed renamable $eax, 1, implicit-def $eflags, pre-instr-symbol <mcsymbol .LBB1_3_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction JNE_1 %bb.7, implicit $eflags, post-instr-symbol <mcsymbol .LBB1_3_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_4_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_4_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $eax = MOVZX32rm8 $rip, 1, $noreg, @garbageCtr, $noreg, pre-instr-symbol <mcsymbol .LBB1_4_CartridgeBody> :: (dereferenceable load 1 from @garbageCtr, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction MUL8r killed renamable $al, implicit-def $al, implicit-def dead $eflags, implicit-def dead $ax, implicit $al

Emit Instruction Taint 0
Emit Instruction renamable $al = ADD8ri killed renamable $al(tied-def 0), 7, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction MOV8mr $rip, 1, $noreg, @garbageCtr, $noreg, renamable $al :: (store 1 into @garbageCtr, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction JMP_1 %bb.6, post-instr-symbol <mcsymbol .LBB1_4_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_5_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_5_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $al = MOV8ri 1, pre-instr-symbol <mcsymbol .LBB1_5_CartridgeBody>, post-instr-symbol <mcsymbol .LBB1_5_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_6_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_6_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction MOV8mr renamable $rdi, 1, renamable $rcx, 0, $noreg, killed renamable $al, pre-instr-symbol <mcsymbol .LBB1_6_CartridgeBody>, post-instr-symbol <mcsymbol .LBB1_6_CartridgeEnd> :: (store 1 into %ir.scevgep, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_7_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_7_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $rcx = nuw nsw ADD64ri8 killed renamable $rcx(tied-def 0), 1, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB1_7_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction renamable $rax = MOVSX64rm32 $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CMP64rr renamable $rcx, killed renamable $rax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JL_1 %bb.2, implicit $eflags, post-instr-symbol <mcsymbol .LBB1_7_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_8_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_8_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $r14 = MOV64rm $rsp, 1, $noreg, 0, $noreg, pre-instr-symbol <mcsymbol .LBB1_8_CartridgeBody>, post-instr-symbol <mcsymbol .LBB1_8_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB1_9_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB1_9_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction RETQ pre-instr-symbol <mcsymbol .LBB1_9_CartridgeBody> post-instr-symbol <mcsymbol .LBB1_9_CartridgeEnd>

Emit Instruction Taint 0
Emit Machine Node with following Taint: 0
t6: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t27: i32 = <<Unknown Machine Node #62520>> t6, t6
Emit Special Node with following Taint: 0
t34: ch,glue = CopyToReg t0, Register:i32 $physreg28, t27
Emit Machine Node with following Taint: 0
t30: ch = <<Unknown Machine Node #64315>> BasicBlock:ch<for.cond.cleanup 0x55deef8dd848>, t34, t34:1
Emit Machine Node with following Taint: 0
t15: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body.preheader 0x55deef8dd780>, t30
Emit Machine Node with following Taint: 0
t7: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t3: ch = CopyToReg t0, Register:i64 %4, t1
Emit Machine Node with following Taint: 0
t5: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8dd910>, t3
Emit Special Node with following Taint: 0
t4: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %2
Emit Machine Node with following Taint: 0
t9: ch = <<Unknown Machine Node #63741>><Mem:(store 1 into %ir.scevgep, !tbaa <0x55deef8081d8>)> t2, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, TargetConstant:i8<-1>, t0
Emit Machine Node with following Taint: 0
t11: i64,i32 = <<Unknown Machine Node #65255>> nuw nsw t4, TargetConstant:i64<1>
Emit Special Node with following Taint: 0
t13: ch = CopyToReg t0, Register:i64 %1, t11
Emit Machine Node with following Taint: 0
t24: i64,ch = <<Unknown Machine Node #63632>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t9
Emit Machine Node with following Taint: 0
t29: i64,i32 = <<Unknown Machine Node #62623>> t11, t24
Emit Special Node with following Taint: 0
t20: ch = TokenFactor t13, t9
Emit Special Node with following Taint: 0
t36: ch,glue = CopyToReg t20, Register:i32 $physreg28, t29:1
Emit Machine Node with following Taint: 0
t32: ch = <<Unknown Machine Node #64312>> BasicBlock:ch<for.body 0x55deef8dd910>, t36, t36:1
Emit Machine Node with following Taint: 0
t23: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.cond.cleanup 0x55deef8dd848>, t32
Emit Machine Node with following Taint: 0
t2: ch = <<Unknown Machine Node #63003>> TargetConstant:i32<0>, t0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB2_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB2_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @numEntries, $noreg, pre-instr-symbol <mcsymbol .LBB2_0_CartridgeBody> :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST32rr killed renamable $eax, renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JLE_1 %bb.3, implicit $eflags, post-instr-symbol <mcsymbol .LBB2_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB2_1_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB2_1_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = XOR32rr undef $eax(tied-def 0), undef $eax, implicit-def dead $eflags, implicit-def $rax, pre-instr-symbol <mcsymbol .LBB2_1_CartridgeBody>, post-instr-symbol <mcsymbol .LBB2_1_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB2_2_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB2_2_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction MOV8mi renamable $rdi, 1, renamable $rax, 0, $noreg, -1, pre-instr-symbol <mcsymbol .LBB2_2_CartridgeBody> :: (store 1 into %ir.scevgep, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction renamable $rax = nuw nsw ADD64ri8 killed renamable $rax(tied-def 0), 1, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction renamable $rcx = MOVSX64rm32 $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CMP64rr renamable $rax, killed renamable $rcx, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JL_1 %bb.2, implicit $eflags, post-instr-symbol <mcsymbol .LBB2_2_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB2_3_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB2_3_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $r14 = MOV64rm $rsp, 1, $noreg, 0, $noreg, pre-instr-symbol <mcsymbol .LBB2_3_CartridgeBody>, post-instr-symbol <mcsymbol .LBB2_3_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB2_4_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB2_4_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction RETQ pre-instr-symbol <mcsymbol .LBB2_4_CartridgeBody> post-instr-symbol <mcsymbol .LBB2_4_CartridgeEnd>

Emit Instruction Taint 0
Emit Machine Node with following Taint: 0
t6: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t27: i32 = <<Unknown Machine Node #62520>> t6, t6
Emit Special Node with following Taint: 0
t34: ch,glue = CopyToReg t0, Register:i32 $physreg28, t27
Emit Machine Node with following Taint: 0
t30: ch = <<Unknown Machine Node #64315>> BasicBlock:ch<for.cond.cleanup 0x55deef8cd8a8>, t34, t34:1
Emit Machine Node with following Taint: 0
t15: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body.preheader 0x55deef8cd7e0>, t30
Emit Machine Node with following Taint: 0
t7: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t3: ch = CopyToReg t0, Register:i64 %4, t1
Emit Machine Node with following Taint: 0
t5: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8cd970>, t3
Emit Special Node with following Taint: 0
t4: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %2
Emit Machine Node with following Taint: 0
t9: ch = <<Unknown Machine Node #63741>><Mem:(store 1 into %ir.scevgep, !tbaa <0x55deef8081d8>)> t2, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, TargetConstant:i8<0>, t0
Emit Machine Node with following Taint: 0
t11: i64,i32 = <<Unknown Machine Node #65255>> nuw nsw t4, TargetConstant:i64<1>
Emit Special Node with following Taint: 0
t13: ch = CopyToReg t0, Register:i64 %1, t11
Emit Machine Node with following Taint: 0
t24: i64,ch = <<Unknown Machine Node #63632>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t9
Emit Machine Node with following Taint: 0
t29: i64,i32 = <<Unknown Machine Node #62623>> t11, t24
Emit Special Node with following Taint: 0
t20: ch = TokenFactor t13, t9
Emit Special Node with following Taint: 0
t36: ch,glue = CopyToReg t20, Register:i32 $physreg28, t29:1
Emit Machine Node with following Taint: 0
t32: ch = <<Unknown Machine Node #64312>> BasicBlock:ch<for.body 0x55deef8cd970>, t36, t36:1
Emit Machine Node with following Taint: 0
t23: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.cond.cleanup 0x55deef8cd8a8>, t32
Emit Machine Node with following Taint: 0
t2: ch = <<Unknown Machine Node #63003>> TargetConstant:i32<0>, t0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB3_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB3_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @numEntries, $noreg, pre-instr-symbol <mcsymbol .LBB3_0_CartridgeBody> :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST32rr killed renamable $eax, renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JLE_1 %bb.3, implicit $eflags, post-instr-symbol <mcsymbol .LBB3_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB3_1_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB3_1_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = XOR32rr undef $eax(tied-def 0), undef $eax, implicit-def dead $eflags, implicit-def $rax, pre-instr-symbol <mcsymbol .LBB3_1_CartridgeBody>, post-instr-symbol <mcsymbol .LBB3_1_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB3_2_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB3_2_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction MOV8mi renamable $rdi, 1, renamable $rax, 0, $noreg, 0, pre-instr-symbol <mcsymbol .LBB3_2_CartridgeBody> :: (store 1 into %ir.scevgep, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction renamable $rax = nuw nsw ADD64ri8 killed renamable $rax(tied-def 0), 1, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction renamable $rcx = MOVSX64rm32 $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CMP64rr renamable $rax, killed renamable $rcx, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JL_1 %bb.2, implicit $eflags, post-instr-symbol <mcsymbol .LBB3_2_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB3_3_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB3_3_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $r14 = MOV64rm $rsp, 1, $noreg, 0, $noreg, pre-instr-symbol <mcsymbol .LBB3_3_CartridgeBody>, post-instr-symbol <mcsymbol .LBB3_3_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB3_4_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB3_4_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction RETQ pre-instr-symbol <mcsymbol .LBB3_4_CartridgeBody> post-instr-symbol <mcsymbol .LBB3_4_CartridgeEnd>

Emit Instruction Taint 0
Emit Machine Node with following Taint: 0
t4: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t7: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t4:1
Emit Special Node with following Taint: 0
t9: ch,glue = CopyToReg t7:1, Register:i32 $physreg26, t4
Emit Machine Node with following Taint: 0
t12: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<i8* (i32)* @malloc_tase> 0, Register:i32 $physreg26, RegisterMask:Untyped, t9, t9:1
Emit Machine Node with following Taint: 0
t13: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t12, t12:1
Emit Special Node with following Taint: 0
t15: i64,ch,glue = CopyFromReg t13:1, Register:i64 $physreg48, t13:2
Emit Special Node with following Taint: 0
t17: ch = CopyToReg t0, Register:i64 %0, t15
Emit Machine Node with following Taint: 0
t92: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t13:1
Emit Special Node with following Taint: 0
t93: ch = TokenFactor t15:1, t92:1
Emit Machine Node with following Taint: 0
t19: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t93
Emit Special Node with following Taint: 0
t20: ch,glue = CopyToReg t19:1, Register:i32 $physreg26, t92
Emit Machine Node with following Taint: 0
t21: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<i8* (i32)* @malloc_tase> 0, Register:i32 $physreg26, RegisterMask:Untyped, t20, t20:1
Emit Machine Node with following Taint: 0
t22: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t21, t21:1
Emit Special Node with following Taint: 0
t23: i64,ch,glue = CopyFromReg t22:1, Register:i64 $physreg48, t22:2
Emit Special Node with following Taint: 0
t25: ch = CopyToReg t0, Register:i64 %1, t23
Emit Machine Node with following Taint: 0
t90: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t22:1
Emit Machine Node with following Taint: 0
t28: i32,i32 = <<Unknown Machine Node #65268>> nsw t90, TargetConstant:i32<1>
Emit Special Node with following Taint: 0
t91: ch = TokenFactor t23:1, t90:1
Emit Machine Node with following Taint: 0
t29: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t91
Emit Special Node with following Taint: 0
t30: ch,glue = CopyToReg t29:1, Register:i32 $physreg26, t28
Emit Machine Node with following Taint: 0
t31: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<i8* (i32)* @malloc_tase> 0, Register:i32 $physreg26, RegisterMask:Untyped, t30, t30:1
Emit Machine Node with following Taint: 0
t32: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t31, t31:1
Emit Special Node with following Taint: 0
t33: i64,ch,glue = CopyFromReg t32:1, Register:i64 $physreg48, t32:2
Emit Special Node with following Taint: 0
t35: ch = CopyToReg t0, Register:i64 %2, t33
Emit Machine Node with following Taint: 0
t37: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t33:1
Emit Special Node with following Taint: 0
t39: ch,glue = CopyToReg t37:1, Register:i64 $physreg52, t15
Emit Machine Node with following Taint: 0
t41: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*)* @initializeNums> 0, Register:i64 $physreg52, RegisterMask:Untyped, t39, t39:1
Emit Machine Node with following Taint: 0
t42: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t41, t41:1
Emit Machine Node with following Taint: 0
t43: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t42:1
Emit Special Node with following Taint: 0
t44: ch,glue = CopyToReg t43:1, Register:i64 $physreg52, t23
Emit Machine Node with following Taint: 0
t45: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*)* @initializeNums> 0, Register:i64 $physreg52, RegisterMask:Untyped, t44, t44:1
Emit Machine Node with following Taint: 0
t46: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t45, t45:1
Emit Machine Node with following Taint: 0
t48: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t46:1
Emit Special Node with following Taint: 0
t49: ch,glue = CopyToReg t48:1, Register:i64 $physreg52, t15
Emit Machine Node with following Taint: 0
t51: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*)* @initializeAllZeros> 0, Register:i64 $physreg52, RegisterMask:Untyped, t49, t49:1
Emit Machine Node with following Taint: 0
t52: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t51, t51:1
Emit Machine Node with following Taint: 0
t54: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t52:1
Emit Special Node with following Taint: 0
t55: ch,glue = CopyToReg t54:1, Register:i64 $physreg52, t23
Emit Machine Node with following Taint: 0
t57: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*)* @initializeAllOnes> 0, Register:i64 $physreg52, RegisterMask:Untyped, t55, t55:1
Emit Machine Node with following Taint: 0
t58: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t57, t57:1
Emit Machine Node with following Taint: 0
t87: i64,ch = <<Unknown Machine Node #63632>><Mem:(dereferenceable load 4 from @symIndex, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @symIndex> 0, Register:i32 $noreg, t58:1
Emit Machine Node with following Taint: 0
t98: i32 = <<Unknown Machine Node #62515>> t87, t87
Emit Special Node with following Taint: 0
t63: ch = CopyToReg t0, Register:i64 %3, t87
Emit Machine Node with following Taint: 0
t67: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t58:1
Emit Special Node with following Taint: 0
t74: ch = CopyToReg t0, Register:i32 %7, t67
Emit Special Node with following Taint: 0
t72: ch = CopyToReg t0, Register:i32 %6, t89
Emit Special Node with following Taint: 0
t78: ch = TokenFactor t17, t25, t35, t63, t72, t74, t58:1
Emit Special Node with following Taint: 0
t107: ch,glue = CopyToReg t78, Register:i32 $physreg28, t98
Emit Machine Node with following Taint: 0
t101: ch = <<Unknown Machine Node #64275>> BasicBlock:ch<if.end 0x55deef8e74c8>, t107, t107:1
Emit Machine Node with following Taint: 0
t81: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<entry 0x55deef8e7a48>, t101
Emit Special Node with following Taint: 0
t4: i32,ch = CopyFromReg t0, Register:i32 %7
Emit Special Node with following Taint: 0
t2: i32,ch = CopyFromReg t0, Register:i32 %6
Emit Machine Node with following Taint: 0
t20: i32,i32 = <<Unknown Machine Node #62632>> t2, t4
Emit Special Node with following Taint: 0
t25: ch,glue = CopyToReg t0, Register:i32 $physreg28, t20:1
Emit Machine Node with following Taint: 0
t23: ch = <<Unknown Machine Node #64321>> BasicBlock:ch<if.end 0x55deef8e74c8>, t25, t25:1
Emit Machine Node with following Taint: 0
t12: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<if.then 0x55deef8e7400>, t23
Emit Special Node with following Taint: 0
t4: i64,ch = CopyFromReg t0, Register:i64 %3
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Machine Node with following Taint: 0
t7: i64,i32 = <<Unknown Machine Node #65252>> t2, t4
Emit Machine Node with following Taint: 1
t10: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t0
Emit Special Node with following Taint: 1
t12: ch,glue = CopyToReg t10:1, Register:i64 $physreg52, t7
Emit Machine Node with following Taint: 1
t15: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*)* @make_byte_symbolic> 0, Register:i64 $physreg52, RegisterMask:Untyped, t12, t12:1
Emit Machine Node with following Taint: 1
t16: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t15, t15:1
Emit Machine Node with following Taint: 0
t4: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @repetitions, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @repetitions> 0, Register:i32 $noreg, t0
Emit Machine Node with following Taint: 0
t25: i32 = <<Unknown Machine Node #62520>> t4, t4
Emit Special Node with following Taint: 0
t32: ch,glue = CopyToReg t0, Register:i32 $physreg28, t25
Emit Machine Node with following Taint: 0
t28: ch = <<Unknown Machine Node #64315>> BasicBlock:ch<for.cond.cleanup 0x55deef8e7658>, t32, t32:1
Emit Machine Node with following Taint: 0
t13: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body.preheader 0x55deef8e7590>, t28
Emit Machine Node with following Taint: 0
t1: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t3: ch = CopyToReg t0, Register:i32 %18, <<Unknown Machine Node #65368>>:i32,i32
Emit Machine Node with following Taint: 0
t5: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8e7720>, t3
Emit Machine Node with following Taint: 1
t9: i64,ch,glue = <<Unknown Machine Node #65202>> TargetConstant:i64<0>, TargetConstant:i64<0>, TargetConstant:i32<0>, t0
Emit Special Node with following Taint: 1
t3: i64,ch = CopyFromReg t0, Register:i64 %0
Emit Special Node with following Taint: 1
t5: i64,ch = CopyFromReg t0, Register:i64 %1
Emit Special Node with following Taint: 1
t7: i64,ch = CopyFromReg t0, Register:i64 %2
Emit Special Node with following Taint: 1
t11: ch,glue = CopyToReg t9:1, Register:i64 $physreg52, t3
Emit Special Node with following Taint: 1
t13: ch,glue = CopyToReg t11, Register:i64 $physreg56, t5, t11:1
Emit Special Node with following Taint: 1
t15: ch,glue = CopyToReg t13, Register:i64 $physreg53, t7, t13:1
Emit Machine Node with following Taint: 1
t18: ch,glue = <<Unknown Machine Node #64976>> TargetGlobalAddress:i64<void (i8*, i8*, i8*)* @runTest> 0, Register:i64 $physreg52, Register:i64 $physreg56, Register:i64 $physreg53, RegisterMask:Untyped, t15, t15:1
Emit Machine Node with following Taint: 1
t19: i64,ch,glue = <<Unknown Machine Node #65200>> TargetConstant:i64<0>, TargetConstant:i64<0>, t18, t18:1
Emit Special Node with following Taint: 0
t21: i32,ch = CopyFromReg t0, Register:i32 %4
Emit Machine Node with following Taint: 0
t23: i32,i32 = <<Unknown Machine Node #65268>> nuw nsw t21, TargetConstant:i32<1>
Emit Special Node with following Taint: 0
t25: ch = CopyToReg t0, Register:i32 %5, t23
Emit Machine Node with following Taint: 0
t29: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @repetitions, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @repetitions> 0, Register:i32 $noreg, t19:1
Emit Machine Node with following Taint: 0
t41: i32,i32 = <<Unknown Machine Node #62632>> t23, t29
Emit Special Node with following Taint: 0
t33: ch = TokenFactor t25, t19:1
Emit Special Node with following Taint: 0
t48: ch,glue = CopyToReg t33, Register:i32 $physreg28, t41:1
Emit Machine Node with following Taint: 0
t44: ch = <<Unknown Machine Node #64312>> BasicBlock:ch<for.body 0x55deef8e7720>, t48, t48:1
Emit Machine Node with following Taint: 0
t36: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.cond.cleanup 0x55deef8e7658>, t44
Emit Machine Node with following Taint: 0
t2: ch = <<Unknown Machine Node #63003>> TargetConstant:i32<0>, t0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction frame-setup PUSH64r killed $rbp, implicit-def $rsp, implicit $rsp, pre-instr-symbol <mcsymbol .LBB4_0_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction frame-setup PUSH64r killed $r13, implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction frame-setup PUSH64r killed $r12, implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction frame-setup PUSH64r killed $rbx, implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction frame-setup PUSH64r undef $rax, implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction renamable $edi = MOV32rm $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @malloc_tase, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, post-instr-symbol <mcsymbol .LBB4_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_1_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_1_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $r12 = MOV64rr $rax, pre-instr-symbol <mcsymbol .LBB4_1_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction renamable $edi = MOV32rm $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @malloc_tase, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, post-instr-symbol <mcsymbol .LBB4_1_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_2_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_2_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rbx = MOV64rr $rax, pre-instr-symbol <mcsymbol .LBB4_2_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction renamable $edi = MOV32rm $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction renamable $edi = nsw ADD32ri8 killed renamable $edi(tied-def 0), 1, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @malloc_tase, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, post-instr-symbol <mcsymbol .LBB4_2_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_3_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_3_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $r13 = MOV64rr $rax, pre-instr-symbol <mcsymbol .LBB4_3_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction $rdi = MOV64rr $r12

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @initializeNums, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_3_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_4_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_4_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rdi = MOV64rr $rbx, pre-instr-symbol <mcsymbol .LBB4_4_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @initializeNums, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_4_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_5_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_5_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rdi = MOV64rr $r12, pre-instr-symbol <mcsymbol .LBB4_5_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @initializeAllZeros, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_5_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_6_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_6_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rdi = MOV64rr $rbx, pre-instr-symbol <mcsymbol .LBB4_6_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @initializeAllOnes, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_6_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_7_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_7_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $rdi = MOVSX64rm32 $rip, 1, $noreg, @symIndex, $noreg, pre-instr-symbol <mcsymbol .LBB4_7_CartridgeBody> :: (dereferenceable load 4 from @symIndex, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST64rr renamable $rdi, renamable $rdi, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JS_1 %bb.10, implicit $eflags, post-instr-symbol <mcsymbol .LBB4_7_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_8_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_8_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @numEntries, $noreg, pre-instr-symbol <mcsymbol .LBB4_8_CartridgeBody> :: (dereferenceable load 4 from @numEntries)

Emit Instruction Taint 0
Emit Instruction CMP32rr renamable $edi, killed renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JGE_1 %bb.10, implicit $eflags, post-instr-symbol <mcsymbol .LBB4_8_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_9_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_9_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $rdi = ADD64rr killed renamable $rdi(tied-def 0), renamable $r12, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB4_9_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction $xmm15 = PINSRQrm $xmm15(tied-def 0), $rsp, 1, $noreg, -8, $noreg, 0

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @make_byte_symbolic, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_9_CartridgeEnd>

Emit Instruction Taint 1
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_10_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_10_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @repetitions, $noreg, pre-instr-symbol <mcsymbol .LBB4_10_CartridgeBody> :: (dereferenceable load 4 from @repetitions, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST32rr killed renamable $eax, renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JLE_1 %bb.14, implicit $eflags, post-instr-symbol <mcsymbol .LBB4_10_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_11_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_11_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $ebp = XOR32rr undef $ebp(tied-def 0), undef $ebp, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB4_11_CartridgeBody>, post-instr-symbol <mcsymbol .LBB4_11_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_12_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_12_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rdi = MOV64rr $r12, pre-instr-symbol <mcsymbol .LBB4_12_CartridgeBody>

Emit Instruction Taint 1
Emit Instruction $rsi = MOV64rr $rbx

Emit Instruction Taint 1
Emit Instruction $rdx = MOV64rr $r13

Emit Instruction Taint 1
Emit Instruction $xmm15 = PINSRQrm $xmm15(tied-def 0), $rsp, 1, $noreg, -8, $noreg, 0

Emit Instruction Taint 0
Emit Instruction CALL64pcrel32 @runTest, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $rsi, implicit killed $rdx, implicit-def $rsp, implicit-def $ssp, post-instr-symbol <mcsymbol .LBB4_12_CartridgeEnd>

Emit Instruction Taint 1
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_13_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_13_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $ebp = nuw nsw ADD32ri8 killed renamable $ebp(tied-def 0), 1, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB4_13_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction renamable $eax = MOV32rm $rip, 1, $noreg, @repetitions, $noreg :: (dereferenceable load 4 from @repetitions, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CMP32rr renamable $ebp, killed renamable $eax, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JL_1 %bb.12, implicit $eflags, post-instr-symbol <mcsymbol .LBB4_13_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_14_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_14_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction $rsp = frame-destroy ADD64ri8 $rsp(tied-def 0), 8, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB4_14_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction $rbx = frame-destroy POP64r implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction $r12 = frame-destroy POP64r implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction $r13 = frame-destroy POP64r implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction $rbp = frame-destroy POP64r implicit-def $rsp, implicit $rsp

Emit Instruction Taint 0
Emit Instruction $r14 = MOV64rm $rsp, 1, $noreg, 0, $noreg, post-instr-symbol <mcsymbol .LBB4_14_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB4_15_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB4_15_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction RETQ pre-instr-symbol <mcsymbol .LBB4_15_CartridgeBody> post-instr-symbol <mcsymbol .LBB4_15_CartridgeEnd>

Emit Instruction Taint 0
Emit Special Node with following Taint: 0
t6: i64,ch = CopyFromReg t0, Register:i64 %11
Emit Machine Node with following Taint: 0
t10: ch = <<Unknown Machine Node #63760>><Mem:(store 8 into @resultPtr, !tbaa <0x55deef80e6b8>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i8** @resultPtr> 0, Register:i32 $noreg, t6, t0
Emit Machine Node with following Taint: 0
t34: i32,ch = <<Unknown Machine Node #63770>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t0
Emit Special Node with following Taint: 0
t14: ch = CopyToReg t0, Register:i32 %0, t34
Emit Machine Node with following Taint: 0
t57: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t20: ch = CopyToReg t0, Register:i8 %12, t18
Emit Machine Node with following Taint: 0
t41: i32 = <<Unknown Machine Node #62520>> t34, t34
Emit Special Node with following Taint: 0
t24: ch = TokenFactor t14, t20, t10
Emit Special Node with following Taint: 0
t50: ch,glue = CopyToReg t24, Register:i32 $physreg28, t41
Emit Machine Node with following Taint: 0
t44: ch = <<Unknown Machine Node #64315>> BasicBlock:ch<for.cond.cleanup 0x55deef8cd970>, t50, t50:1
Emit Machine Node with following Taint: 0
t27: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body.preheader 0x55deef8cd7e0>, t44
Emit Machine Node with following Taint: 0
t10: i32,i32 = <<Unknown Machine Node #65368>>
Emit Special Node with following Taint: 0
t6: ch = CopyToReg t0, Register:i16 %15, t4
Emit Special Node with following Taint: 0
t3: ch = CopyToReg t0, Register:i64 %14, t1
Emit Special Node with following Taint: 0
t8: ch = TokenFactor t3, t6
Emit Machine Node with following Taint: 0
t9: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.body 0x55deef8cdb18>, t8
Emit Special Node with following Taint: 0
t4: i64,ch = CopyFromReg t0, Register:i64 %4
Emit Special Node with following Taint: 0
t2: i64,ch = CopyFromReg t0, Register:i64 %9
Emit Machine Node with following Taint: 0
t75: i32,ch = <<Unknown Machine Node #63613>><Mem:(load 1 from %ir.scevgep2, !tbaa <0x55deef8081d8>)> t2, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, t0
Emit Special Node with following Taint: 0
t11: i64,ch = CopyFromReg t0, Register:i64 %10
Emit Machine Node with following Taint: 0
t67: i32,ch = <<Unknown Machine Node #63613>><Mem:(load 1 from %ir.scevgep1, !tbaa <0x55deef8081d8>)> t11, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, t0
Emit Special Node with following Taint: 1
t16: i16,ch = CopyFromReg t0, Register:i16 %5
Emit Machine Node with following Taint: 0
t76: i32,i32 = <<Unknown Machine Node #65264>> t74, t75
Emit Machine Node with following Taint: 0
t68: i32,i32 = <<Unknown Machine Node #65264>> t76, t67
Emit Machine Node with following Taint: 0
t63: i32 = <<Unknown Machine Node #63609>> t89
Emit Special Node with following Taint: 1
t23: ch = CopyToReg t0, Register:i16 %6, t64
Emit Special Node with following Taint: 0
t26: i64,ch = CopyFromReg t0, Register:i64 %11
Emit Special Node with following Taint: 1
t28: ch = TokenFactor t75:1, t67:1
Emit Machine Node with following Taint: 1
t29: ch = <<Unknown Machine Node #63740>><Mem:(store 1 into %ir.scevgep, !tbaa <0x55deef8081d8>)> t26, TargetConstant:i8<1>, t4, TargetConstant:i32<0>, Register:i32 $noreg, t73, t28
Emit Machine Node with following Taint: 0
t31: i64,i32 = <<Unknown Machine Node #65255>> nuw nsw t4, TargetConstant:i64<1>
Emit Special Node with following Taint: 0
t33: ch = CopyToReg t0, Register:i64 %7, t31
Emit Machine Node with following Taint: 0
t46: i64,ch = <<Unknown Machine Node #63632>><Mem:(dereferenceable load 4 from @numEntries, !tbaa <0x55deef808198>)> Register:i64 $physreg54, TargetConstant:i8<1>, Register:i64 $noreg, TargetGlobalAddress:i32<i32* @numEntries> 0, Register:i32 $noreg, t29
Emit Special Node with following Taint: 0
t37: ch = CopyToReg t0, Register:i32 %8, t47
Emit Machine Node with following Taint: 0
t54: i64,i32 = <<Unknown Machine Node #62623>> t31, t46
Emit Special Node with following Taint: 0
t42: ch = TokenFactor t23, t33, t37, t29
Emit Special Node with following Taint: 0
t80: ch,glue = CopyToReg t42, Register:i32 $physreg28, t54:1
Emit Machine Node with following Taint: 0
t57: ch = <<Unknown Machine Node #64312>> BasicBlock:ch<for.body 0x55deef8cdb18>, t80, t80:1
Emit Machine Node with following Taint: 0
t45: ch = <<Unknown Machine Node #64297>> BasicBlock:ch<for.cond.cleanup.loopexit 0x55deef8cd8a8>, t57
Emit Special Node with following Taint: 1
t2: i16,ch = CopyFromReg t0, Register:i16 %6
Emit Special Node with following Taint: 1
t7: ch = CopyToReg t0, Register:i8 %1, t5
Emit Special Node with following Taint: 0
t2: i32,ch = CopyFromReg t0, Register:i32 %3
Emit Machine Node with following Taint: 0
t3: i64 = <<Unknown Machine Node #63629>> t2
Emit Special Node with following Taint: 0
t5: i64,ch = CopyFromReg t0, Register:i64 %11
Emit Special Node with following Taint: 1
t8: i8,ch = CopyFromReg t0, Register:i8 %2
Emit Machine Node with following Taint: 1
t11: ch = <<Unknown Machine Node #63740>><Mem:(store 1 into %ir.arrayidx18, !tbaa <0x55deef8081d8>)> t5, TargetConstant:i8<1>, t3, TargetConstant:i32<0>, Register:i32 $noreg, t8, t0
Emit Machine Node with following Taint: 0
t13: ch = <<Unknown Machine Node #63003>> TargetConstant:i32<0>, t11
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_0_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_0_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction MOV64mr $rip, 1, $noreg, @resultPtr, $noreg, renamable $rdx, pre-instr-symbol <mcsymbol .LBB5_0_CartridgeBody> :: (store 8 into @resultPtr, !tbaa !8)

Emit Instruction Taint 0
Emit Instruction renamable $r8d = MOV32rm $rip, 1, $noreg, @numEntries, $noreg, implicit-def $r8 :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction TEST32rr renamable $r8d, renamable $r8d, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JLE_1 %bb.3, implicit $eflags, post-instr-symbol <mcsymbol .LBB5_0_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_1_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_1_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $ecx = XOR32rr undef $ecx(tied-def 0), undef $ecx, implicit-def dead $eflags, implicit-def $rcx, pre-instr-symbol <mcsymbol .LBB5_1_CartridgeBody>

Emit Instruction Taint 0
Emit Instruction renamable $eax = XOR32rr undef $eax(tied-def 0), undef $eax, implicit-def dead $eflags, post-instr-symbol <mcsymbol .LBB5_1_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_2_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_2_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $r8d = MOVZX32rm8 renamable $rdi, 1, renamable $rcx, 0, $noreg, pre-instr-symbol <mcsymbol .LBB5_2_CartridgeBody> :: (load 1 from %ir.scevgep2, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction renamable $r9d = MOVZX32rm8 renamable $rsi, 1, renamable $rcx, 0, $noreg :: (load 1 from %ir.scevgep1, !tbaa !6)

Emit Instruction Taint 0
Emit Instruction renamable $eax = ADD32rr killed renamable $eax(tied-def 0), killed renamable $r8d, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction renamable $eax = ADD32rr killed renamable $eax(tied-def 0), killed renamable $r9d, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction $r14 = LEA64r renamable $rdx, 1, renamable $rcx, 0, $noreg

Emit Instruction Taint 0
Emit Instruction $r14 = SHR64r1 $r14(tied-def 0), implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction $xmm15 = PINSRWrm $xmm15(tied-def 0), $r14, 1, $r14, 0, $noreg, 0

Emit Instruction Taint 0
Emit Instruction MOV8mr renamable $rdx, 1, renamable $rcx, 0, $noreg, renamable $al :: (store 1 into %ir.scevgep, !tbaa !6)

Emit Instruction Taint 1
Emit Instruction renamable $eax = MOVZX32rr8_NOREX renamable $ah, implicit killed $eax

Emit Instruction Taint 0
Emit Instruction renamable $rcx = nuw nsw ADD64ri8 killed renamable $rcx(tied-def 0), 1, implicit-def dead $eflags

Emit Instruction Taint 0
Emit Instruction renamable $r8 = MOVSX64rm32 $rip, 1, $noreg, @numEntries, $noreg :: (dereferenceable load 4 from @numEntries, !tbaa !2)

Emit Instruction Taint 0
Emit Instruction CMP64rr renamable $rcx, renamable $r8, implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction JL_1 %bb.2, implicit $eflags, post-instr-symbol <mcsymbol .LBB5_2_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction JMP_1 %bb.4

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_3_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_3_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $eax = XOR32rr undef $eax(tied-def 0), undef $eax, implicit-def dead $eflags, pre-instr-symbol <mcsymbol .LBB5_3_CartridgeBody>, post-instr-symbol <mcsymbol .LBB5_3_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_4_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_4_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction renamable $rcx = MOVSX64rr32 renamable $r8d, implicit killed $r8, pre-instr-symbol <mcsymbol .LBB5_4_CartridgeBody>

Emit Instruction Taint 1
Emit Instruction $r14 = LEA64r renamable $rdx, 1, renamable $rcx, 0, $noreg

Emit Instruction Taint 0
Emit Instruction $r14 = SHR64r1 $r14(tied-def 0), implicit-def $eflags

Emit Instruction Taint 0
Emit Instruction $xmm15 = PINSRWrm $xmm15(tied-def 0), $r14, 1, $r14, 0, $noreg, 0

Emit Instruction Taint 0
Emit Instruction MOV8mr killed renamable $rdx, 1, killed renamable $rcx, 0, $noreg, renamable $al, implicit killed $eax :: (store 1 into %ir.arrayidx18, !tbaa !6)

Emit Instruction Taint 1
Emit Instruction $r14 = MOV64rm $rsp, 1, $noreg, 0, $noreg, post-instr-symbol <mcsymbol .LBB5_4_CartridgeEnd>

Emit Instruction Taint 0
Emit Instruction $r15 = LEA64r $rip, 1, $noreg, <mcsymbol .LBB5_5_CartridgeBody>, $noreg, pre-instr-symbol <mcsymbol .LBB5_5_CartridgeHead>

Emit Instruction Taint 0
Emit Instruction TASE_JMP_4 &sb_reopen

Emit Instruction Taint 0
Emit Instruction RETQ pre-instr-symbol <mcsymbol .LBB5_5_CartridgeBody> post-instr-symbol <mcsymbol .LBB5_5_CartridgeEnd>

Emit Instruction Taint 0
